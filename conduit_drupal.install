<?php
/**
 * @file
 * Provides installation functions.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implements hook_install().
 */
function conduit_drupal_install() {
  field_helper_install_all('conduit_drupal');
}

/**
 * Implements hook_uninstall().
 */
function conduit_drupal_uninstall() {
  field_helper_uninstall_all('conduit_drupal');
}

/**
 * Create result field group for node type.
 *
 * @param $type
 *   Node type.
 */
function conduit_drupal_install_group($type) {
  $info = conduit_job_info($type);
  $group = array(
    'group_name' => $info['module'] . '_result',
    'entity_type' => 'node',
    'bundle' => $type,
    'mode' => 'default',
    'parent_name' => '',
    'label' => 'Result',
    'weight' => 10,
    'children' => array_keys(module_invoke($info['module'], 'install_instances')),
    'format_type' => 'view',
    'format_settings' => array(
      'instance_settings' => array(
        'primary_field' => 'conduit_result_drupal_summary',
        'field_suppress' => 'load',
      ),
    ),
  );
  $group = (object) $group;

  // Only include drupal result fields.
  foreach ($group->children as $key => &$child) {
    if (strpos($child, 'job_conduit_result_drupal') === 0) {
      $child = substr($child, 4);
    }
    else {
      unset($group->children[$key]);
    }
  }
  field_group_create_field_group($group);
}

/**
 * Remove result field group for node type.
 *
 * @param $type
 *   Node type.
 */
function conduit_drupal_uninstall_group($type) {
  $info = conduit_job_info($type);
  $groups = field_group_read_groups(array(
    'group_name' => $name = $info['module'] . '_result',
  ));
  if ($groups && ($group = $groups['node'][$type]['default'][$name])) {
    field_group_delete_field_group($group, $group->mode);
  }
}

/**
 * Implements hook_install_fields().
 */
function conduit_drupal_install_fields() {
  $t = get_t();
  return array(
    'conduit_result_drupal_summary' => array(
      'field_name' => 'conduit_result_drupal_summary',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_item' => array(
      'field_name' => 'conduit_result_drupal_item',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_type_0' => array(
      'field_name' => 'conduit_result_drupal_type_0',
      'type' => 'number_integer',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_type_1' => array(
      'field_name' => 'conduit_result_drupal_type_1',
      'type' => 'number_integer',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_type_2' => array(
      'field_name' => 'conduit_result_drupal_type_2',
      'type' => 'number_integer',
      'cardinality' => -1,
    ),

    'conduit_result_drupal_delta' => array(
      'field_name' => 'conduit_result_drupal_delta',
      'type' => 'number_integer',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_file' => array(
      'field_name' => 'conduit_result_drupal_file',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_function' => array(
      'field_name' => 'conduit_result_drupal_function',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_group' => array(
      'field_name' => 'conduit_result_drupal_group',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_line' => array(
      'field_name' => 'conduit_result_drupal_line',
      'type' => 'number_integer',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_message' => array(
      'field_name' => 'conduit_result_drupal_message',
      'type' => 'text',
      'cardinality' => -1,
    ),
    'conduit_result_drupal_type' => array(
      'field_name' => 'conduit_result_drupal_type',
      'type' => 'text',
      'cardinality' => -1,
    ),
  );
}

/**
 * Implements hook_install_instances().
 */
function conduit_drupal_install_instances() {
  return array();
}

/**
 * Drupal job field instances.
 *
 * @param $type
 *   Node type to assign instances to.
 * @return
 *   Associative array of field instances with unique keys.
 * @see hook_install_instances()
 */
function conduit_drupal_install_instances_job($type) {
  module_load_install('conduit');
  $t = get_t();

  $instances = array(
    'job_conduit_result_drupal_summary' => array(
      'field_name' => 'conduit_result_drupal_summary',
      'label' => $t('Summary'),
      'description' => $t('Summary of a group of results.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_item' => array(
      'field_name' => 'conduit_result_drupal_item',
      'label' => $t('Item'),
      'description' => $t('Item to which the summary is related.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_type_0' => array(
      'field_name' => 'conduit_result_drupal_type_0',
      'label' => $t('Type 0'),
      'description' => $t('Total number of messages of type 0 in the group.'),
      'settings' => array('min' => 0),
      'widget' => array('type' => 'number'),
    ),
    'job_conduit_result_drupal_type_1' => array(
      'field_name' => 'conduit_result_drupal_type_1',
      'label' => $t('Type 1'),
      'description' => $t('Total number of messages of type 1 in the group.'),
      'settings' => array('min' => 0),
      'widget' => array('type' => 'number'),
    ),
    'job_conduit_result_drupal_type_2' => array(
      'field_name' => 'conduit_result_drupal_type_2',
      'label' => $t('Type 2'),
      'description' => $t('Total number of messages of type 2 in the group.'),
      'settings' => array('min' => 0),
      'widget' => array('type' => 'number'),
    ),

    'job_conduit_result_drupal_delta' => array(
      'field_name' => 'conduit_result_drupal_delta',
      'label' => $t('Delta'),
      'description' => $t('Reference to summary delta.'),
      'settings' => array('min' => 0),
      'widget' => array('type' => 'number'),
    ),
    'job_conduit_result_drupal_file' => array(
      'field_name' => 'conduit_result_drupal_file',
      'label' => $t('File'),
      'description' => $t('File to which message related.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_function' => array(
      'field_name' => 'conduit_result_drupal_function',
      'label' => $t('Function'),
      'description' => $t('Function to which message is related.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_group' => array(
      'field_name' => 'conduit_result_drupal_group',
      'label' => $t('Group'),
      'description' => $t('Group to which message belongs.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_line' => array(
      'field_name' => 'conduit_result_drupal_line',
      'label' => $t('Line'),
      'description' => $t('Line number to which message is related.'),
      'settings' => array('min' => -1),
      'widget' => array('type' => 'number'),
    ),
    'job_conduit_result_drupal_message' => array(
      'field_name' => 'conduit_result_drupal_message',
      'label' => $t('Message'),
      'description' => $t('Message text.'),
      'widget' => array('type' => 'text_textfield'),
    ),
    'job_conduit_result_drupal_type' => array(
      'field_name' => 'conduit_result_drupal_type',
      'label' => $t('Type'),
      'description' => $t('Type of message.'),
      'widget' => array('type' => 'text_textfield'),
    ),
  );

  foreach ($instances as &$instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $type;
  }
  return conduit_install_instances_job($type) + $instances;
}
