<?php
/**
 * @file
 * Provides Drupal coder integration.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implements hook_node_info().
 */
function drupal_coder_node_info() {
  return conduit_node_info_job('drupal_coder', t('Perform a review of code.'));
}

/**
 * Implements hook_conduit_validate().
 */
function drupal_coder_conduit_validate(array $properties) {
  conduit_drupal_conduit_validate($properties);
  extract($properties);

  if (!is_array($reviews)) {
    conduit_validate_error('reviews', t('must be an array'));
  }
  else {
    foreach ($reviews as $index => $review) {
      if (!in_array($review, array('comment', 'sql', 'i18n', 'style', 'security'))) {
        conduit_validate_error('reviews', t('must be: comment, sql, i18n, style, or security'), $index);
      }
    }
  }

  if (!in_array($severity, array('critical', 'normal', 'minor'))) {
    conduit_validate_error('severity', t('must be: critical, normal, or minor'), $index);
  }

  if (!is_bool($annotate)) {
    conduit_validate_error('annotate', t('must be a boolean (true or false)'));
  }
}

/**
 * Implements hook_conduit_default_properties().
 */
function drupal_coder_conduit_default_properties() {
  return conduit_drupal_conduit_default_properties() + array(
    'reviews' => array('comment', 'sql', 'i18n', 'style'),
    'severity' => 'minor',
    'annotate' => FALSE,
  );
}

/**
 * Implements hook_conduit_queue_build().
 */
function drupal_coder_conduit_queue_build(array $properties) {
  return array(array());
}

/**
 * Implements hook_conduit_init().
 */
function drupal_coder_conduit_init($node, $chunk_count) {
  conduit_drupal_conduit_init($node, $chunk_count);
}

/**
 * Implements hook_conduit_result().
 */
function drupal_coder_conduit_result($node, $delta, $result) {
  conduit_drupal_conduit_result($node, $delta, $result);
}

/**
 * Implements hook_conduit_drupal_result_message().
 */
function drupal_coder_conduit_drupal_result_message($total) {
  return t('@critical critical, @normal normal, and @minor minor messages', array(
    '@critical' => $total[0],
    '@normal' => $total[1],
    '@minor' => $total[2],
  ));
}

/**
 * Implements hook_views_api().
 */
function drupal_coder_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_pre_render().
 */
function drupal_coder_views_pre_render($view) {
  if (strpos($view->name, 'drupal_coder') === 0) {
    // Add conduit_drupal css to all drupal_coder views.
    drupal_add_css(drupal_get_path('module', 'conduit_drupal') . '/conduit_drupal.css');
  }
}
